/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 television_screen.glb 
*/

import React, { useState, useRef, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { useLoader } from "@react-three/fiber";
import { TextureLoader, RepeatWrapping } from "three";

export function TelevisionScreenMesh({ showTelevisionScreen, ...props }) {
  const group = useRef();

  // Loading textures
  const textures = useLoader(TextureLoader, [
    "textures/television_screen_uv.webp",
    "textures/television_screen_hide_carousel_uv.webp",
  ]);
  // State variable to control texture change
  const [currentTexture, setCurrentTexture] = useState(textures[0]); // Initialize it as texture1

  // UseEffect used to update the texture based on the showTelevisionScreen state flag prop
  useEffect(() => {
    if (showTelevisionScreen) {
      setCurrentTexture(textures[1]);
    } else {
      setCurrentTexture(textures[0]);
    }
  }, [showTelevisionScreen, textures]);

  const { nodes, materials } = useGLTF("./models/television_screen.glb");

  // Fix Textures placement

  textures.forEach((texture) => {
    texture.wrapT = RepeatWrapping;
    texture.repeat.set(1, -1); // Flip the texture vertically
    texture.offset.set(0, 1); // Correct the vertical offset due to flipping
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="Television_Screen"
          geometry={nodes.Television_Screen.geometry}
          material={materials.television_screen_material}
          position={[-8.614, 18.22, -9.792]}
        >
          {/* Apply the current texture */}
          <meshStandardMaterial map={currentTexture} />
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload(".models/television_screen.glb");
