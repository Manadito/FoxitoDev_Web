/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 picture_frame.glb 
*/

import React, { forwardRef, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useLoader } from "@react-three/fiber";
import * as THREE from "three";
import { RepeatWrapping } from "three";

const PictureFrame = forwardRef((props, ref) => {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF(
    "./models/picture_frame.glb",
  );
  const { actions } = useAnimations(animations, group);
  const texture = useLoader(
    THREE.TextureLoader,
    "textures/picture_frame_uv.webp",
  );
  texture.wrapT = RepeatWrapping;
  texture.repeat.set(1, -1); // Flip the texture vertically
  texture.offset.set(0, 1); // This corrects the vertical offset due to flipping
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh
          ref={ref}
          name="Picture_Frame"
          geometry={nodes.Picture_Frame.geometry}
          material={materials.frame_material}
          position={[-19.466, 24.383, 16.785]}
          rotation={[-0.175, 0, 0]}
        >
          <mesh
            name="Picture"
            geometry={nodes.Picture.geometry}
            material={materials["Material.021"]}
          >
            <meshStandardMaterial map={texture} />
          </mesh>
        </mesh>
      </group>
    </group>
  );
});

useGLTF.preload("./models/picture_frame.glb");
// Assign a display name to the component
PictureFrame.displayName = "PictureFrame";

export { PictureFrame };
